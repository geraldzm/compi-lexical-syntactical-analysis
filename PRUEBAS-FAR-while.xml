<?xml version="1.0" standalone="yes"?>
<Program>
<LetCommand>
<SequentialDeclaration>
<SequentialDeclaration>
<SequentialDeclaration>
<VarDeclaration>
<Identifier value="i"/>
<SimpleTypeDenoter>
<Identifier value="Integer"/>
</SimpleTypeDenoter>
</VarDeclaration>
<VarDeclaration>
<Identifier value="j"/>
<SimpleTypeDenoter>
<Identifier value="Integer"/>
</SimpleTypeDenoter>
</VarDeclaration>
</SequentialDeclaration>
<VarDeclaration>
<Identifier value="k"/>
<SimpleTypeDenoter>
<Identifier value="Integer"/>
</SimpleTypeDenoter>
</VarDeclaration>
</SequentialDeclaration>
<VarDeclaration>
<Identifier value="num"/>
<SimpleTypeDenoter>
<Identifier value="Integer"/>
</SimpleTypeDenoter>
</VarDeclaration>
</SequentialDeclaration>
<SequentialCommand>
<SequentialCommand>
<SequentialCommand>
<WhileCommand>
<BinaryExpression>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
<Operator value=">"/>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</BinaryExpression>
<SequentialCommand>
<SequentialCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="i"/>
</SimpleVname>
<VnameExpression>
<SimpleVname>
<Identifier value="j"/>
</SimpleVname>
</VnameExpression>
</AssignCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="j"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</AssignCommand>
</SequentialCommand>
<EmptyCommand/>
</SequentialCommand>
</WhileCommand>
<DoUntilCommand>
<BinaryExpression>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
<Operator value=">"/>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</BinaryExpression>
<SequentialCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="i"/>
</SimpleVname>
<VnameExpression>
<SimpleVname>
<Identifier value="j"/>
</SimpleVname>
</VnameExpression>
</AssignCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="j"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</AssignCommand>
</SequentialCommand>
</DoUntilCommand>
</SequentialCommand>
<UntilCommand>
<BinaryExpression>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
<Operator value=">"/>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</BinaryExpression>
<SequentialCommand>
<SequentialCommand>
<SequentialCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="i"/>
</SimpleVname>
<VnameExpression>
<SimpleVname>
<Identifier value="j"/>
</SimpleVname>
</VnameExpression>
</AssignCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="i"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</AssignCommand>
</SequentialCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="j"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</AssignCommand>
</SequentialCommand>
<EmptyCommand/>
</SequentialCommand>
<SequentialCommand>
<AssignCommand>
<SimpleVname>
<Identifier value="i"/>
</SimpleVname>
<IntegerExpression>
<IntegerLiteral value="5"/>
</IntegerExpression>
</AssignCommand>
<EmptyCommand/>
</SequentialCommand>
</UntilCommand>
</SequentialCommand>
<EmptyCommand/>
</SequentialCommand>
</LetCommand>
</Program>
